# -*- coding: utf-8 -*-
"""New House Predication.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-4My0eNTujhb3uaW1IqKFSk9MXsmIJ3K

# üè† House Rent Prediction using Linear Regression

This project predicts the **monthly rent price of houses** based on features like bedrooms, bathrooms, area, location rating, etc.  
We will use **Linear Regression** from scikit-learn.

## Import Libraries
We will use the following libraries in this project:

- **pandas** ‚Üí For loading and handling datasets  
- **numpy** ‚Üí For numerical operations  
- **matplotlib / seaborn** ‚Üí For data visualization and analysis  
- **scikit-learn (sklearn)** ‚Üí For splitting dataset and building the Linear Regression model
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression

"""### Load Dataset"""

# Load dataset
df = pd.read_csv("house_rent_price_dataset.csv")

# Show first 5 rows
df.head()

"""### Dataset Overview"""

df.info()

"""### Check Missing Values"""

df.isnull().sum()

df.describe()

"""### Correlation Heatmap"""

plt.figure(figsize=(10,7))
sns.heatmap(df.corr(), annot=True, cmap='coolwarm')
plt.title("Correlation Matrix")
plt.show()

"""### Rent Distribution"""

plt.figure(figsize=(8,5))
sns.histplot(df['rent_price'], kde=True)
plt.title("Distribution of Rent Prices")
plt.show()

"""### Bedrooms vs Rent"""

sns.boxplot(x='bedrooms', y='rent_price', data=df)
plt.title("Bedrooms vs Rent Price")
plt.show()

"""### Define Features (X) and Target (y)
- X ‚Üí Independent variables (bedrooms, area, location, etc.)  
- y ‚Üí Dependent variable (rent price)

"""

X = df.drop(columns=["rent_price"])   # Features
y = df["rent_price"]                  # Target

"""###  Split Data (Train-Test)
We split data into training (80%) and testing (20%).
"""

X_train, X_test, y_train, y_test = train_test_split(
    X, y, test_size=0.2, random_state=42
)

"""### Train Linear Regression Model"""

model = LinearRegression()
model.fit(X_train, y_train)

"""### Make Predictions
Predict rent prices for the full dataset.
"""

df["Predicted_house_price"] = model.predict(X)
df.head()

"""### Save Results
Save the dataset with predictions into **CSV** format.

"""

df.to_csv("final_house_rent_predictions.csv", index=False)

print("‚úÖ File saved successfully with predictions!")

from sklearn.metrics import r2_score

# R-squared score calculate karne ke liye
r2 = r2_score(y_test, model.predict(X_test))
print("R-squared Score:", r2)